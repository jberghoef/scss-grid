.grid {
  display: grid;
  grid-template-columns: repeat($col-range, $col-definition);
  grid-auto-columns: $col-definition;
  grid-template-rows: auto;
  grid-auto-rows: $row-definition;
  grid-column-gap: $col-gap;
  grid-row-gap: $row-gap;

  &.-inline {
    display: inline-grid;
  }

  &.-blank {
    grid-template-columns: unset;
    grid-template-rows: unset;
  }

  &.-col-gap {
    @include breakpoint-each() {
      @for $i from 0 through $gap-range {
        &-#{$i} {
          grid-column-gap: map-get($spacing, $i);
        }
      }
    }
  }

  &.-row-gap {
    @include breakpoint-each() {
      @for $i from 0 through $gap-range {
        &-#{$i} {
          grid-row-gap: map-get($spacing, $i);
        }
      }
    }
  }

  &.-cols {
    @include breakpoint-each() {
      @for $i from 1 through $col-range {
        &-#{$i} {
          grid-template-columns: repeat(#{$i}, $col-definition);
        }
      }

      @for $f1 from 1 through $fraction-range {
        @for $f2 from 1 through $fraction-range {
          @if $f1 != $f2 and $f1 + $f2 <= $fraction-range {
            &-#{$f1}-#{$f2} {
              grid-template-columns: [col-start] #{$f1}fr [col-end col-start] #{$f2}fr [col-end];
            }
          }
        }
      }
    }
  }

  &.-rows {
    @include breakpoint-each() {
      @for $i from 1 through $row-range {
        &-#{$i} {
          grid-template-rows: repeat(#{$i}, $row-definition);
        }
      }
    }
  }

  &.-flow {
    @include breakpoint-each() {
      @each $name, $value in $auto-flow {
        &-#{$name} {
          grid-auto-flow: $value;
        }
      }
    }
  }
}
